import fetch from 'jest-fetch-mock';
import TrajservAPI from './TrajservAPI';

let api;

describe('TrajservAPI', () => {
  beforeEach(() => {
    global.fetch = fetch;
    fetch.resetMocks();

    api = new TrajservAPI({ apiKey: 'apiKey' });
  });

  test('fetchTrajectoryById on success.', () => {
    fetch.mockResponseOnce(
      '{"i":1919755,"t":2,"c":"ffea00","gid":"16617:3","n":"S1","rid":"21120.000011.101:1","p":[[{"x":922213.312,"y":5953300.500,"a":2019713901,"d":0},{"x":922218.438,"y":5953271.500},{"x":922221.875,"y":5953230.000},{"x":922223.562,"y":5953178.000},{"x":922223.000,"y":5953121.500},{"x":922216.000,"y":5952918.000},{"x":922206.375,"y":5952700.500},{"x":922208.875,"y":5952655.000},{"x":922215.188,"y":5952611.000},{"x":922222.562,"y":5952578.000},{"x":922242.812,"y":5952515.000},{"x":922270.875,"y":5952454.500},{"x":922338.875,"y":5952326.000},{"x":922362.562,"y":5952278.000},{"x":922385.375,"y":5952217.000},{"x":922399.625,"y":5952165.000},{"x":922409.562,"y":5952110.000},{"x":922416.000,"y":5952054.000},{"x":922433.062,"y":5951786.500},{"x":922446.188,"y":5951527.500},{"x":922449.750,"y":5951487.500},{"x":922459.625,"y":5951427.500},{"x":922470.000,"y":5951383.000},{"x":922490.125,"y":5951323.000},{"x":922506.625,"y":5951286.000},{"x":922525.750,"y":5951250.000},{"x":922562.312,"y":5951194.500},{"x":922603.938,"y":5951147.500},{"x":922651.000,"y":5951104.000},{"x":922699.750,"y":5951070.000},{"x":922734.375,"y":5951051.000},{"x":922790.250,"y":5951025.500},{"x":922849.688,"y":5951006.500},{"x":923214.312,"y":5950925.500},{"x":923334.938,"y":5950894.500},{"x":923385.500,"y":5950872.500},{"x":923407.438,"y":5950859.000},{"x":923468.188,"y":5950812.500},{"x":923498.938,"y":5950779.500},{"x":923523.188,"y":5950750.000},{"x":923537.562,"y":5950729.000},{"x":923564.500,"y":5950681.500},{"x":923579.938,"y":5950647.500},{"x":923599.312,"y":5950591.500},{"x":923654.875,"y":5950358.000},{"x":923678.812,"y":5950291.000},{"x":924024.688,"y":5949482.000},{"x":924053.125,"y":5949422.000,"a":2019714175,"d":0}],[{"x":925071.625,"y":5949422.000,"a":2019714250,"d":0},{"x":925076.875,"y":5949433.500},{"x":925084.562,"y":5949455.000},{"x":925104.500,"y":5949542.000},{"x":925129.625,"y":5949614.500},{"x":925147.312,"y":5949685.500},{"x":925154.938,"y":5949720.500},{"x":925161.625,"y":5949780.000},{"x":925163.250,"y":5949811.500},{"x":925161.125,"y":5949845.500},{"x":925116.062,"y":5950259.500,"a":2019714300,"d":2019714660,"n":"Luzern","dot":0,"put":0,"sid":"8505000:2"},{"x":925161.125,"y":5949845.500},{"x":925163.250,"y":5949811.500},{"x":925161.625,"y":5949780.000},{"x":925154.938,"y":5949720.500},{"x":925129.625,"y":5949614.500},{"x":925104.500,"y":5949542.000},{"x":925084.562,"y":5949455.000},{"x":925076.875,"y":5949433.500},{"x":925071.625,"y":5949422.000,"a":2019714692,"d":0,"ad":60000}],[{"x":924058.875,"y":5949422.000,"a":2019714740,"d":0},{"x":924029.562,"y":5949483.500},{"x":923684.688,"y":5950291.500},{"x":923671.375,"y":5950325.000},{"x":923660.438,"y":5950359.500},{"x":923644.875,"y":5950429.000},{"x":923604.688,"y":5950592.500},{"x":923588.188,"y":5950649.500},{"x":923552.375,"y":5950720.000},{"x":923536.562,"y":5950747.500},{"x":923517.188,"y":5950772.000},{"x":923475.688,"y":5950814.500},{"x":923440.062,"y":5950843.500},{"x":923410.188,"y":5950865.000},{"x":923387.500,"y":5950878.000},{"x":923363.312,"y":5950889.500},{"x":923335.188,"y":5950901.000},{"x":923309.438,"y":5950909.000},{"x":923215.812,"y":5950931.500},{"x":923001.125,"y":5950980.000},{"x":922851.625,"y":5951012.000},{"x":922792.812,"y":5951030.500},{"x":922736.750,"y":5951055.500},{"x":922701.750,"y":5951075.000},{"x":922654.438,"y":5951110.000},{"x":922607.250,"y":5951152.500},{"x":922565.938,"y":5951200.000},{"x":922529.750,"y":5951254.500},{"x":922495.062,"y":5951326.000},{"x":922473.812,"y":5951392.000},{"x":922465.188,"y":5951427.500},{"x":922456.188,"y":5951480.000},{"x":922451.188,"y":5951536.500},{"x":922447.875,"y":5951594.000},{"x":922448.188,"y":5951633.500},{"x":922450.625,"y":5951669.500},{"x":922457.875,"y":5951712.500},{"x":922470.750,"y":5951761.000},{"x":922484.500,"y":5951796.500},{"x":922509.438,"y":5951843.500},{"x":922527.938,"y":5951872.000},{"x":922545.938,"y":5951896.000},{"x":922568.500,"y":5951922.000},{"x":922593.562,"y":5951946.500},{"x":922634.750,"y":5951980.000},{"x":922659.562,"y":5951996.000},{"x":922715.562,"y":5952025.500},{"x":922798.812,"y":5952050.500},{"x":923031.625,"y":5952109.000},{"x":923087.125,"y":5952125.000},{"x":923138.500,"y":5952142.000},{"x":923177.438,"y":5952158.500},{"x":923216.812,"y":5952178.500},{"x":923276.938,"y":5952217.000},{"x":923334.625,"y":5952267.500},{"x":923451.562,"y":5952402.000},{"x":923474.750,"y":5952425.500},{"x":923527.875,"y":5952471.500},{"x":923557.688,"y":5952493.500},{"x":923622.188,"y":5952530.500},{"x":923684.938,"y":5952556.000},{"x":923733.000,"y":5952572.000},{"x":923834.875,"y":5952602.000},{"x":923901.812,"y":5952627.500},{"x":923981.188,"y":5952670.000},{"x":924094.250,"y":5952751.500},{"x":924290.438,"y":5952897.000},{"x":924372.438,"y":5952953.500},{"x":924436.438,"y":5952985.500},{"x":924507.812,"y":5953014.000},{"x":924591.500,"y":5953049.000},{"x":924645.438,"y":5953078.500},{"x":924834.000,"y":5953210.000},{"x":924976.812,"y":5953300.500,"a":2019714971,"d":0,"ad":60000}]]}',
    );

    return api
      .fetchTrajectoryById({
        a: '1',
        bbox:
          '917830.8141233932,5949421.787168904,926771.7516620635,5953300.375201735',
        btime: '5:54:7.880',
        cd: '1',
        date: '20200701',
        etime: '5:54:24.582',
        fl: '1',
        id: '16617:3',
        nm: '1',
        rid: '1',
        s: '0',
        time: '5:54:8.103',
        z: '15.248670953423606',
      })
      .then((response) => {
        // Correct url
        expect(fetch.mock.calls[0][0]).toEqual(
          'https://api.geops.io/tracker/v1/trajectorybyid?a=1&bbox=917830.8141233932%2C5949421.787168904%2C926771.7516620635%2C5953300.375201735&btime=5%3A54%3A7.880&cd=1&date=20200701&etime=5%3A54%3A24.582&fl=1&id=16617%3A3&key=apiKey&nm=1&rid=1&s=0&time=5%3A54%3A8.103&z=15.248670953423606',
        );

        // Correct search result
        expect(response.rid).toEqual('21120.000011.101:1');
      });
  });

  test('fetchTrajectoryById on error.', () => {
    // Mock console statement
    const consoleOutput = [];
    // eslint-disable-next-line no-console
    console.warn = (message, err) =>
      consoleOutput.push([message, err.toString()]);

    fetch.mockResponseOnce('invalid json');

    return api
      .fetchTrajectoryById({
        attr_det: '1',
        bbox:
          '922972.5439121567,5951167.694705085,923812.5648796591,5951532.096677226',
        btime: '5:18:31.766',
        etime: '5:18:41.967',
        date: '20200701',
        rid: '1',
        a: '1',
        cd: '1',
        nm: '1',
        fl: '1',
        s: '0',
        z: '18.66059982835272',
      })
      .then(() => {
        expect(consoleOutput).toEqual([
          [
            'Fetch trajectorybyid request failed: ',
            'FetchError: invalid json response body at  reason: Unexpected token i in JSON at position 0',
          ],
        ]);
      });
  });

  test('fetchTrajectories on success.', () => {
    fetch.mockResponseOnce(
      '{"type":"FeatureCollection","features":[' +
        '{"type":"Feature","properties":{"ID":4150092,"ProductIdentifier":"Bus","PublishedLineName":"30","RouteIdentifier":"30023.000820.001:30","DirectionText":"Littau, Bahnhof","Operator":"VBL (vbl verkehrsbetriebe luzern ag)","OperatorURL":"http://www.sbb.ch","JourneyIdentifier":"354120","RealtimeAvailable":true,"DayOfOperation":"2020-07-01","Delay":60000,"TimeIntervals": [[1593580711000,0],[1593580721000,1]]},"geometry":{"type":"LineString","coordinates":[[923398.8750000000,5951346.5000000000],[923328.6250000000,5951316.5000000000],[923307.0000000000,5951308.0000000000]]}},' +
        '{"type":"Feature","properties":{"ID":5490505,"ProductIdentifier":"Bus","PublishedLineName":"9","RouteIdentifier":"09026.000820.004:9","DirectionText":"Luzern, Bahnhof","Operator":"VBL (vbl verkehrsbetriebe luzern ag)","OperatorURL":"http://www.sbb.ch","JourneyIdentifier":"348024","RealtimeAvailable":false,"DayOfOperation":"2020-07-01","Delay":null,"TimeIntervals": [[1593580711000,0.0000000000],[1593580721000,1.0000000000]]},"geometry":{"type":"LineString","coordinates":[[923807.4375000000,5951194.5000000000],[923800.5000000000,5951189.0000000000],[923785.3750000000,5951181.0000000000],[923775.0000000000,5951178.5000000000],[923761.4375000000,5951179.5000000000],[923738.0625000000,5951182.5000000000]]}}' +
        ']}',
    );

    return api
      .fetchTrajectories({
        attr_det: '1',
        bbox:
          '922972.5439121567,5951167.694705085,923812.5648796591,5951532.096677226',
        btime: '5:18:31.766',
        etime: '5:18:41.967',
        date: '20200701',
        rid: '1',
        a: '1',
        cd: '1',
        nm: '1',
        fl: '1',
        s: '0',
        z: '18.66059982835272',
      })
      .then((features) => {
        // Correct url
        expect(fetch.mock.calls[0][0]).toEqual(
          'https://api.geops.io/tracker/v1/trajectory_collection?a=1&attr_det=1&bbox=922972.5439121567%2C5951167.694705085%2C923812.5648796591%2C5951532.096677226&btime=5%3A18%3A31.766&cd=1&date=20200701&etime=5%3A18%3A41.967&fl=1&key=apiKey&nm=1&rid=1&s=0&z=18.66059982835272',
        );

        // Correct search result
        expect(features[0].id).toEqual(4150092);
      });
  });

  test('fetchTrajectories on error.', () => {
    // Mock console statement
    const consoleOutput = [];
    // eslint-disable-next-line no-console
    console.warn = (message, err) =>
      consoleOutput.push([message, err.toString()]);

    fetch.mockResponseOnce('invalid json');

    return api
      .fetchTrajectories({
        attr_det: '1',
        bbox:
          '922972.5439121567,5951167.694705085,923812.5648796591,5951532.096677226',
        btime: '5:18:31.766',
        etime: '5:18:41.967',
        date: '20200701',
        rid: '1',
        a: '1',
        cd: '1',
        nm: '1',
        fl: '1',
        s: '0',
        z: '18.66059982835272',
      })
      .then(() => {
        expect(consoleOutput).toEqual([
          [
            'Fetch trajectory_collection request failed: ',
            'FetchError: invalid json response body at  reason: Unexpected token i in JSON at position 0',
          ],
        ]);
      });
  });

  test('fetchTrajectoryStations on success.', () => {
    fetch.mockResponseOnce(
      '{"id":1714251,"t":2,"wa":0,"ba":0,"c":"","tc":"","hs":"Landquart","rt":1,"sn":"R","ln":"R 1716","rid":"01716.000072.001:1716","fid":0,"tt":{"t":30,"n":[{"m":12,"d":25,"y":119},{"m":12,"d":26,"y":119},{"m":1,"d":1,"y":120},{"m":1,"d":2,"y":120},{"m":4,"d":10,"y":120},{"m":5,"d":21,"y":120}],"p":[]},"sts":[{"p":[8.855304049,46.70487497],"at":242400000,"dt":242400000,"ap":1593578640,"dp":1593578640,"ad":0,"dd":0,"c":0,"sid":"8509179:3","dot":0,"put":0,"n":"Disentis/Mustér","wa":0},{"p":[8.931329032,46.72398378],"at":247200000,"dt":247200000,"ap":1593579120,"dp":1593579120,"ad":60000,"dd":60000,"c":0,"sid":"8509178","dot":3,"put":3,"n":"Sumvitg-Cumpadials","wa":0},{"p":[8.957496957,46.73245663],"at":249000000,"dt":250200000,"ap":1593579300,"dp":1593579420,"ad":0,"dd":0,"c":0,"sid":"8509177","dot":3,"put":3,"n":"Rabius-Surrein","wa":0},{"p":[8.990474111,46.74247946],"at":252600000,"dt":253200000,"ap":1593579660,"dp":1593579720,"ad":0,"dd":0,"c":0,"sid":"8509176","dot":0,"put":0,"n":"Trun","wa":0},{"p":[9.062420182,46.75475921],"at":256800000,"dt":257400000,"ap":1593580080,"dp":1593580140,"ad":60000,"dd":60000,"c":0,"sid":"8509175","dot":0,"put":0,"n":"Tavanasa-Breil/Brigels","wa":0},{"p":[9.120172871,46.76952198],"at":259800000,"dt":259800000,"ap":1593580380,"dp":1593580380,"ad":60000,"dd":120000,"c":0,"sid":"8509174","dot":3,"put":3,"n":"Waltensburg/Vuorz","wa":0},{"p":[9.14561316,46.77471475],"at":261600000,"dt":261600000,"ap":1593580560,"dp":1593580560,"ad":120000,"dd":120000,"c":0,"sid":"8509173","dot":3,"put":3,"n":"Rueun","wa":0},{"p":[9.207435218,46.77541611],"at":265200000,"dt":266400000,"ap":1593580920,"dp":1593581040,"ad":0,"dd":0,"c":0,"sid":"8509171:1","dot":0,"put":0,"n":"Ilanz","wa":0},{"p":[9.233073136,46.77847982],"at":268200000,"dt":268200000,"ap":1593581220,"dp":1593581220,"ad":60000,"dd":60000,"c":0,"sid":"8509170","dot":3,"put":3,"n":"Castrisch","wa":0},{"p":[9.275473618,46.79176617],"at":271200000,"dt":271200000,"ap":1593581520,"dp":1593581520,"ad":60000,"dd":60000,"c":0,"sid":"8509169","dot":3,"put":3,"n":"Valendas-Sagogn","wa":0},{"p":[9.310292318,46.8074042],"at":274200000,"dt":274800000,"ap":1593581820,"dp":1593581880,"ad":60000,"dd":0,"c":0,"sid":"8509168","dot":0,"put":0,"n":"Versam-Safien","wa":0},{"p":[9.35946722,46.81647561],"at":277800000,"dt":277800000,"ap":1593582180,"dp":1593582180,"ad":60000,"dd":60000,"c":0,"sid":"8509167","dot":3,"put":3,"n":"Trin","wa":0},{"p":[9.412610429,46.82359703],"at":281400000,"dt":281400000,"ap":1593582540,"dp":1593582540,"ad":60000,"dd":60000,"c":0,"sid":"8509183:3","dot":0,"put":0,"n":"Reichenau-Tamins","wa":0},{"p":[9.430388089,46.82862479],"at":282600000,"dt":282600000,"ap":1593582660,"dp":1593582660,"ad":60000,"dd":60000,"c":0,"sid":"8509182:2","dot":3,"put":3,"n":"Ems Werk","wa":0},{"p":[9.453115465,46.83316658],"at":284400000,"dt":284400000,"ap":1593582840,"dp":1593582840,"ad":0,"dd":0,"c":0,"sid":"8509181:1","dot":0,"put":0,"n":"Domat/Ems","wa":0},{"p":[9.512682752,46.84998445],"at":287400000,"dt":287400000,"ap":1593583140,"dp":1593583140,"ad":0,"dd":0,"c":0,"sid":"8509050:2","dot":3,"put":3,"n":"Chur West","wa":0},{"p":[9.528403269,46.85353538],"at":289800000,"dt":300600000,"ap":1593583380,"dp":1593584460,"ad":0,"dd":0,"c":0,"sid":"8509000:12","dot":0,"put":0,"n":"Chur","wa":0},{"p":[9.531529406,46.86189572],"at":301200000,"dt":301800000,"ap":1593584520,"dp":1593584580,"ad":0,"dd":0,"c":0,"sid":"8509006","dot":3,"put":3,"n":"Chur Wiesental","wa":0},{"p":[9.53319129,46.87697298],"at":303000000,"dt":303000000,"ap":1593584700,"dp":1593584700,"ad":0,"dd":0,"c":0,"sid":"8509051","dot":3,"put":3,"n":"Haldenstein","wa":0},{"p":[9.559202009,46.91877102],"at":306000000,"dt":306600000,"ap":1593585000,"dp":1593585060,"ad":0,"dd":0,"c":0,"sid":"8509053:1","dot":0,"put":0,"n":"Untervaz-Trimmis","wa":0},{"p":[9.559502944,46.93483522],"at":307800000,"dt":307800000,"ap":1593585180,"dp":1593585180,"ad":0,"dd":0,"c":0,"sid":"8509054","dot":3,"put":3,"n":"Zizers","wa":0},{"p":[9.564686224,46.94983066],"at":309000000,"dt":309000000,"ap":1593585300,"dp":1593585300,"ad":0,"dd":0,"c":0,"sid":"8509055","dot":3,"put":3,"n":"Igis","wa":0},{"p":[9.560949232,46.95724403],"at":310200000,"dt":310200000,"ap":1593585420,"dp":1593585420,"ad":0,"dd":0,"c":0,"sid":"8509056","dot":3,"put":3,"n":"Landquart Ried","wa":0},{"p":[9.554481362,46.96747635],"at":312600000,"dt":312600000,"ap":1593585660,"dp":1593585660,"ad":0,"dd":0,"c":0,"sid":"8509002:6","dot":3,"put":3,"n":"Landquart","wa":0}],"a":{"n":"RhB (Rhätische Bahn)","u":"http://www.sbb.ch","l":"","p":"","f":"","tz":"Europe/Berlin"},"f":{"n":"SBB","u":"http://www.sbb.ch","l":"de","s":"20191215","e":"20201212","v":"Fahrplan 2020"}}',
    );

    return api
      .fetchTrajectoryStations({
        a: '1',
        bbox:
          '1059098.4179109985,5917420.543096403,1063534.5137495932,5919344.9260996',
        btime: '6:17:22.722',
        cd: '1',
        date: '20200701',
        etime: '6:17:33.526',
        fl: '1',
        id: '1714251',
        key: 'apiKey',
        nm: '1',
        rid: '1',
        s: '0',
        time: '6:17:23.34',
        z: '16.259806538265146',
      })
      .then((response) => {
        // Correct url
        expect(fetch.mock.calls[0][0]).toEqual(
          'https://api.geops.io/tracker/v1/trajstations?a=1&bbox=1059098.4179109985%2C5917420.543096403%2C1063534.5137495932%2C5919344.9260996&btime=6%3A17%3A22.722&cd=1&date=20200701&etime=6%3A17%3A33.526&fl=1&id=1714251&key=apiKey&nm=1&rid=1&s=0&time=6%3A17%3A23.34&z=16.259806538265146',
        );

        // Correct search result
        expect(response.routeIdentifier).toEqual('01716.000072.001:1716');
      });
  });

  test('fetchTrajectoryStations on error.', () => {
    // Mock console statement
    const consoleOutput = [];
    // eslint-disable-next-line no-console
    console.warn = (message, err) =>
      consoleOutput.push([message, err.toString()]);

    fetch.mockResponseOnce('invalid json');

    return api
      .fetchTrajectoryStations({
        attr_det: '1',
        bbox:
          '922972.5439121567,5951167.694705085,923812.5648796591,5951532.096677226',
        btime: '5:18:31.766',
        etime: '5:18:41.967',
        date: '20200701',
        rid: '1',
        a: '1',
        cd: '1',
        nm: '1',
        fl: '1',
        s: '0',
        z: '18.66059982835272',
      })
      .then(() => {
        expect(consoleOutput).toEqual([
          [
            'Fetch trajstations request failed: ',
            'FetchError: invalid json response body at  reason: Unexpected token i in JSON at position 0',
          ],
        ]);
      });
  });
});
